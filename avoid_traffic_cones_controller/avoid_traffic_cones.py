"""avoid_traffic_controlle_controller controller."""

# You may need to import some classes of the controller module. Ex:
#  from controller import Robot, Motor, DistanceSensor
from controller import Robot, Camera
from vehicle import Car, Driver
import random
import numpy as np
import cv2

# create the Robot instance.
robot = Driver()

# get the time step of the current world.
timestep = int(robot.getBasicTimeStep())

# initialize sensors
lidar = robot.getDevice("Sick LMS 291")
lidar.enable(timestep)
lidar.enablePointCloud()

# set initial system state
steer_angle = 0
brake = 0.0


# Main loop:
# - perform simulation steps until Webots is stopping the controller
while robot.step() != -1:   
    
    # read the sensor values
    lidar_sensor_readings = lidar.getRangeImage()
    lidar_sensor_left     = lidar_sensor_readings[0:60]
    lidar_sensor_center   = lidar_sensor_readings[60:120]
    lidar_sensor_right    = lidar_sensor_readings[120:180]
  
    speed = 25
    
    if any(ele < 4 for ele in lidar_sensor_center[:29]):
        speed = 25
        steer_angle = 0.17
        
    elif any(ele < 4 for ele in lidar_sensor_center[30:]):
        speed = 25
        steer_angle = -0.17
        
    elif all(ele == np.inf for ele in lidar_sensor_readings):
        speed = 0
     
    else: 
        steer_angle = 0.0  
       
        
    robot.setBrakeIntensity(brake)
    robot.setSteeringAngle(steer_angle)
    robot.setCruisingSpeed(speed)








































































































































































































































































































































































































h